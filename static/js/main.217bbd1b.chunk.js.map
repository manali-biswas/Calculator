{"version":3,"sources":["index.js"],"names":["CalculatorTitle","props","className","Button","type","value","label","onClick","handleClick","OutputScreenRow","readOnly","OutputScreen","question","answer","Calculator","state","bind","event","target","this","ans","eval","err","setState","undefined","str","substr","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.217bbd1b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nconst CalculatorTitle = (props) =>{\n    return(\n      <h1 className=\"cal\">Manali's Calculator</h1>\n    );\n  }\n\n\nconst Button = (props) => {\n  return(\n    <input className=\"btn\" type=\"button\" value={props.label} onClick={props.handleClick}/>\n  );\n}\n\nconst OutputScreenRow = (props) => {\n  return (\n    <div className= \"screen-row\">\n      <input className=\"input\" type=\"text\" value={props.value}  readOnly/>      \n    </div>\n  );\n}\n\nconst OutputScreen = (props) => {\n  return (\n    <div className=\"screen\">\n      <OutputScreenRow value={props.question}/>\n      <OutputScreenRow value={props.answer}/>\n     </div>\n  );\n}\n\nclass Calculator extends React.Component {\n  constructor(){\n    super();\n    \n    this.state={\n      question:'',\n      answer:''\n    }\n    \n    this.handleClick=this.handleClick.bind(this);\n  }\n  \n  handleClick(event){\n    const value=event.target.value;\n    \n    switch(value){\n      case '=': {\n        if(this.state.question!=='')\n          {\n            var ans='';\n            try{// eslint-disable-next-line\n              ans=eval(this.state.question);\n            }\n            catch(err){\n              this.setState({answer:'Math error'});\n            }\n            if(ans===undefined||(ans===''))\n              this.setState({answer:'Math error'});\n            else\n              this.setState({answer:ans});\n            break;\n          }\n\t\t  break;\n      }\n      case 'AC':{\n        this.setState({answer:'', question:''});\n            break;\n      }\n      case 'C':{\n        var str=this.state.question;\n        str=str.substr(0,str.length-1);\n        this.setState({ question:str});\n            break;\n      }\n      default:{// eslint-disable-next-line\n        this.setState({ question: this.state.question+= value});        \n    break;\n    }\n    }\n  }\n  render(){\n    return(\n      <div className=\"frame\">\n        <div className=\"title\">\n          <CalculatorTitle /></div>\n      <div className=\"mainCal\">\n        <OutputScreen question={this.state.question} answer={this.state.answer}/>\n        <div className=\"button-row\">\n          <Button label={'AC'} handleClick={this.handleClick}/>\n          <Button label={'C'} handleClick={this.handleClick}/>\n          <Button label={'.'} handleClick={this.handleClick}/>\n          <Button label={'/'} handleClick={this.handleClick}/>\n        </div>\n        <div className=\"button-row\">\n          <Button label={'7'} handleClick={this.handleClick}/>\n          <Button label={'8'} handleClick={this.handleClick}/>\n          <Button label={'9'} handleClick={this.handleClick}/>\n          <Button label={'*'} handleClick={this.handleClick}/>\n        </div>\n        <div className=\"button-row\">\n          <Button label={'4'} handleClick={this.handleClick}/>\n          <Button label={'5'} handleClick={this.handleClick}/>\n          <Button label={'6'} handleClick={this.handleClick}/>\n          <Button label={'-'} handleClick={this.handleClick}/>\n        </div>\n        <div className=\"button-row\">\n          <Button label={'1'} handleClick={this.handleClick}/>\n          <Button label={'2'} handleClick={this.handleClick}/>\n          <Button label={'3'} handleClick={this.handleClick}/>\n          <Button label={'+'} handleClick={this.handleClick}/>\n        </div>\n        <div className=\"button-row\">\n          <Button label={'0'} handleClick={this.handleClick}/>\n          <Button label={'='} handleClick={this.handleClick}/>          </div>\n        \n        </div>\n        </div>\n    );\n  }\n}\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}